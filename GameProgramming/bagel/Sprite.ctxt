#BlueJ class context
comment0.target=Sprite
comment0.text=\r\n\ Represents\ the\ game\ entities\ displayed\ on\ the\ screen;\r\n\ \ can\ move\ and\ interact\ with\ each\ other.\r\n
comment1.params=
comment1.target=Sprite()
comment1.text=\r\n\ Sprite\ Constructor;\ initializes\ to\ position\ (0,0).\r\n\r\n
comment10.params=context
comment10.target=void\ draw(javafx.scene.canvas.GraphicsContext)
comment10.text=\r\n\ Draw\ the\ image\ contained\ in\ this\ sprite,\ \r\n\ \ \ at\ the\ position\ stored\ in\ this\ sprite,\r\n\ \ \ with\ the\ size\ stored\ in\ the\ rectangle\ in\ this\ sprite.\r\n\r\n\ @param\ context\ The\ context\ object\ attached\ to\ the\ canvas\ in\ the\ window\ where\ the\ game\ will\ appear.\r\n
comment11.params=xAmount\ yAmount
comment11.target=void\ moveBy(double,\ double)
comment11.text=\r\n\ Move\ the\ sprite's\ position\ (x,\ y)\ by\ adding\ the\ given\ amounts.\r\n\r\n\ @param\ xAmount\ amount\ to\ add\ to\ x-coordinate\ of\ position\r\n\ @param\ yAmount\ amount\ to\ add\ to\ y-coordinate\ of\ position\r\n
comment12.params=angleAmount
comment12.target=void\ rotateBy(double)
comment12.text=\r\n\ Rotate\ the\ angle\ of\ the\ sprite\ image\ by\ the\ given\ amount\ (in\ degrees).\r\n\r\n\ @param\ angleAmount\ amount\ to\ add\ to\ current\ angle\ of\ rotation\r\n
comment13.params=other
comment13.target=boolean\ overlap(Sprite)
comment13.text=\r\n\ Check\ if\ this\ sprite\ overlaps\ another\ sprite\r\n\ \ \ by\ checking\ if\ this\ sprite's\ rectangle\ overlaps\ other\ sprite's\ rectangle.\r\n\r\n\ @param\ other\ the\ other\ sprite\ to\ check\ for\ overlap\ with\r\n\ @return\ true,\ if\ sprites\ overlap\r\n
comment14.params=screenWidth\ screenHeight
comment14.target=void\ wrap(double,\ double)
comment14.text=\r\n\ If\ the\ sprite\ moves\ past\ the\ edge\ of\ the\ screen,\r\n\ \ \ adjust\ its\ position\ to\ the\ opposite\ side\ of\ the\ screen.\r\n\r\n\ @param\ screenWidth\ width\ of\ the\ game\ window\ (800\ by\ default)\r\n\ @param\ screenHeight\ height\ of\ the\ game\ window\ (600\ by\ default)\r\n
comment15.params=a
comment15.target=void\ addAction(Action)
comment15.text=\r\n\ Add\ an\ Action\ to\ the\ list\ of\ actions\ being\ performed\ by\ the\ sprite.\r\n\r\n\ @param\ a\ the\ Action\ to\ add\r\n
comment16.params=deltaTime
comment16.target=void\ update(double)
comment16.text=\r\n\ Automatically\ update\ any\ special\ objects\ \r\n\ \ that\ have\ been\ added\ to\ this\ sprite,\ such\ as\ physics,\ animation,\ actions.\r\n\r\n\ @param\ deltaTime\ the\ time\ that\ has\ passed\ since\ last\ update\ (1/60\ second)\r\n
comment2.params=x\ y
comment2.target=Sprite(double,\ double)
comment2.text=\r\n\ Sprite\ Constructor;\ initializes\ position\ to\ (x,y).\r\n\r\n\ @param\ x\ x\ coordinate\ of\ top-left\ corner\r\n\ @param\ y\ y\ coordinate\ of\ top-left\ corner\r\n
comment3.params=x\ y
comment3.target=void\ setPosition(double,\ double)
comment3.text=\r\n\ Update\ the\ position\ of\ this\ sprite.\ \r\n\ Automatically\ updates\ position\ of\ rectangle\ bounds.\r\n\r\n\ @param\ x\ new\ x\ coordinate\r\n\ @param\ y\ new\ y\ coordinate\r\n
comment4.params=width\ height
comment4.target=void\ setSize(double,\ double)
comment4.text=\r\n\ Update\ the\ size\ of\ this\ sprite.\ Used\ for\ collision\ detection.\r\n\ By\ default,\ size\ of\ sprite\ is\ size\ of\ texture\ image\ region.\r\n\r\n\ @param\ width\ size\ along\ x\ direction\r\n\ @param\ height\ size\ along\ y\ direction\r\n
comment5.params=tex
comment5.target=void\ setTexture(Texture)
comment5.text=\r\n\ Set\ the\ texture\ data\ used\ for\ drawing\ this\ sprite\ in\ the\ game\r\n\r\n\ @param\ tex\ previously\ created\ texture\ object,\ containing\ an\ image\r\n
comment6.params=vis
comment6.target=void\ setVisible(boolean)
comment6.text=\r\n\ Set\ visibility\ of\ this\ sprite,\ which\ determines\ whether\ it\ appears\ on\ the\ screen.\r\n\r\n\ @param\ vis\ should\ this\ sprite\ be\ visible?\r\n
comment7.params=p
comment7.target=void\ setPhysics(Physics)
comment7.text=\r\n\ Assign\ a\ Physics\ object\ to\ this\ Sprite.\r\n\ When\ physics\ object\ updates\ position,\ Sprite\ position\ will\ be\ updated\ too.\r\n\ @param\ p\ Physics\ object\r\n
comment8.params=a
comment8.target=void\ setAnimation(Animation)
comment8.text=\r\n\ Assign\ an\ Animation\ object\ to\ this\ Sprite.\r\n
comment9.params=angleDegrees
comment9.target=void\ setAngle(double)
comment9.text=\r\n\ Set\ the\ angle\ of\ rotation\ of\ the\ image\ of\ this\ sprite.\r\n\ @param\ angleDegrees\ the\ angle\ of\ rotation\r\n
numComments=17
